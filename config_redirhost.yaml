mixed-port: 7890
redir-port: 7891
tproxy-port: 1536
mode: Rule
#俺的自定义规则
ipv6: false
allow-lan: true
geodata-mode: true
geo-auto-update: true
geodata-loader: standard
geo-update-interval: 24
geox-url:
  geoip: "https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip.dat"
  geosite: "https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat"
unified-delay: true
tcp-concurrent: true
enable-process: true
log-level: silent
find-process-mode: always
global-client-fingerprint: random
external-controller: 0.0.0.0:9090
#面板默认Meta 可选Yacd 清除浏览器缓存即可重新加载
external-ui: /data/adb/box_bll/panel/Yacd/ #/Meta/Yacd
secret: ""

#####################
#修改配置文件时，建议先停止模块服务，再进行保存.
#####################

profile:
  store-selected: true
  store-fake-ip: false

sniffer:
  enable: true
  force-dns-mapping: true
  parse-pure-ip: true
  override-destination: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]


tun:
  enable: false
  device: tun0
  stack: system
  dns-hijack:
    - any:53
    - tcp://any:53
  auto-route: true
  strict-route: true
  auto-redirect: false
  auto-detect-interface: true
  route-exclude-address:
  - 192.168.0.0/16
  - fc00::/7

dns:
  enable: true
  respect-rules: true
  ipv6: false
  listen: 0.0.0.0:1053
  enhanced-mode: redir-host
  nameserver:
    - 'https://1.1.1.1/dns-query'
    - 'https://8.8.8.8/dns-query'
  proxy-server-nameserver:
    - system
    - 223.5.5.5
  nameserver-policy:
    '*': 127.0.0.1#lo
    '+.lan': 127.0.0.1#lo
    '+.arpa': 127.0.0.1#lo
    '+.local': 127.0.0.1#lo
    'geosite:cn':
      - 223.5.5.5
      - system

#俺的自定义规则
p: &p
  {type: http, url: "", interval: 21600, health-check: {enable: true, url: https://www.gstatic.com/generate_204, interval: 300,timeout: 1000,tolerance: 100}, override: {ip-version: ipv4}}
# , health-check: {enable: true, url: https://www.gstatic.com/generate_204, interval: 300,timeout: 2000,tolerance: 50},override: {udp: true, udp-over-tcp: true}
f: &f
  {type: http, url: "", interval: 21600, health-check: {enable: true, url: https://www.gstatic.com/generate_204, interval: 300,timeout: 1000,tolerance: 100}, override: {ip-version: ipv4}}

#俺的自定义规则  

proxy-providers:

  HongKong:
    <<: *p
    filter: "^(?=.*(港|HK|hk|Hong Kong|HongKong|hongkong))(?!.*(灾|网易|Netease)).*"
    path: ./proxy_providers/HongKong.yaml
  Japan:
    <<: *p
    filter: "^(?=.*(日本|川日|东京|大阪|泉日|埼玉|沪日|深日|[^-]日|JP|Japan))(?!.*(灾|网易|Netease)).*"
    path: ./proxy_providers/Japan.yaml
  America:
    <<: *p
    filter: "^(?=.*(美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States))(?!.*(灾|网易|Netease)).*"
    path: ./proxy_providers/America.yaml
  Taiwan:
    <<: *p
    filter: "^(?=.*(台|新北|彰化|TW|Taiwan))(?!.*(灾|网易|Netease)).*"
    path: ./proxy_providers/Taiwan.yaml
  Singapore:
    <<: *p
    filter: "^(?=.*(新加坡|坡|狮城|SG|Singapore))(?!.*(灾|网易|Netease)).*"
    path: ./proxy_providers/Singapore.yaml
  Britain:
    <<: *p
    filter: "^(?=.*(英|伦敦|UK|Britain))(?!.*(灾|网易|Netease)).*"
    path: ./proxy_providers/Britain.yaml
  Malaysia:
    <<: *p
    filter: "^(?=.*(马来西亚|吉隆坡|马来|MY|Malaysia))(?!.*(灾|网易|Netease)).*"
    path: ./proxy_providers/Malaysia.yaml

  # Resilience:
  #   <<: *p
  #   filter: "^(?=.*(灾))(?!.*(网易|Netease)).*"
  #   path: ./proxy_providers/Resilience.yaml
  # Neteasemusic: 
  #   <<: *p
  #   filter: "(Netease)"
  #   path: ./proxy_providers/Neteasemusic.yaml 

  Others:
    <<: *p
    filter: "^(?=.*)(?!.*(港|HK|hk|Hong Kong|HongKong|hongkong|日本|川日|东京|大阪|泉日|埼玉|沪日|深日|[^-]日|JP|Japan|美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States|台|新北|彰化|TW|Taiwan|新加坡|坡|狮城|SG|Singapore|英|伦敦|UK|Britain|马来西亚|吉隆坡|马来|MY|Malaysia|灾|网易|套餐|订阅|群|账户|流量|有效期|时间|官网|电报|失联|Netease)).*"
    path: ./proxy_providers/Others.yaml
  
  All: 
    <<: *p
    filter: "^(?!.*(网易|套餐|订阅|群|账户|流量|有效期|时间|官网|电报|失联)).*$"
    path: ./proxy_providers/All.yaml

  second:
    <<: *f
    filter: "^(?=.*)(?!.*(灾|网易|套餐|订阅|群|账户|流量|有效期|时间|官网|电报|失联|Netease)).*"
    path: ./proxy_providers/second.yaml

default_proxy_groups_rule: &default_proxy_groups_rule
  {url: http://www.gstatic.com/generate_204, interval: 300}

proxy-groups:
  - {name: 🚀 节点选择, type: select, <<: *default_proxy_groups_rule, proxies: [♻️ 自动选择节点组, ♻️ 自动选择, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇬🇧 英国节点, 🇲🇾 马来西亚节点, ✈️ 备用机场, 🚀 手动切换, DIRECT]}
  - {name: 🚀 手动切换, type: select, <<: *default_proxy_groups_rule, use: [All, second]}
  - {name: ♻️ 自动选择节点组, type: url-test, <<: *default_proxy_groups_rule, tolerance: 50, proxies: [ 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇬🇧 英国节点, 🇲🇾 马来西亚节点]}
  - {name: ♻️ 自动选择, type: url-test, <<: *default_proxy_groups_rule, tolerance: 50, use: [All]}
  - {name: 📲 Telegram, type: select, <<: *default_proxy_groups_rule, proxies: [🚀 节点选择, ♻️ 自动选择, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇬🇧 英国节点, 🇲🇾 马来西亚节点, 🚀 手动切换, DIRECT]}
  - {name: 💬 AI, type: select, <<: *default_proxy_groups_rule, proxies: [🚀 节点选择, ♻️ 自动选择, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇬🇧 英国节点, 🇲🇾 马来西亚节点, 🚀 手动切换, DIRECT]}
  - {name: 📥 下载, type: select, <<: *default_proxy_groups_rule, proxies: [DIRECT, 🚀 节点选择, ♻️ 自动选择, 🚀 手动切换]}
  - {name: 📹 YouTube, type: select, <<: *default_proxy_groups_rule, proxies: [🚀 节点选择, ♻️ 自动选择, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇬🇧 英国节点, 🇲🇾 马来西亚节点, 🚀 手动切换, DIRECT]}
  - {name: 🌍 国外媒体, type: select, <<: *default_proxy_groups_rule, proxies: [🚀 节点选择, ♻️ 自动选择, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇬🇧 英国节点, 🇲🇾 马来西亚节点, 🚀 手动切换, DIRECT]}
  - {name: Ⓜ️ 微软Bing, type: select, <<: *default_proxy_groups_rule, proxies: [🚀 节点选择, DIRECT, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇬🇧 英国节点, 🇲🇾 马来西亚节点, 🚀 手动切换]}
  - {name: Ⓜ️ 微软云盘, type: select, <<: *default_proxy_groups_rule, proxies: [🚀 节点选择, DIRECT,🇭🇰 香港节点, 🇨🇳 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇬🇧 英国节点, 🇲🇾 马来西亚节点, 🚀 手动切换]}
  - {name: Ⓜ️ 微软服务, type: select, <<: *default_proxy_groups_rule, proxies: [🚀 节点选择, DIRECT,🇭🇰 香港节点, 🇨🇳 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇬🇧 英国节点, 🇲🇾 马来西亚节点, 🚀 手动切换]}
  - {name: 🎮 游戏平台, type: select, <<: *default_proxy_groups_rule, proxies: [🚀 节点选择, DIRECT,🇭🇰 香港节点, 🇨🇳 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇬🇧 英国节点, 🇲🇾 马来西亚节点, 🚀 手动切换]}
  - {name: 🇭🇰 香港节点, type: load-balance, <<: *default_proxy_groups_rule, strategy: consistent-hashing, use: [HongKong]}
  - {name: 🇯🇵 日本节点, type: load-balance, <<: *default_proxy_groups_rule, strategy: consistent-hashing, use: [Japan]}
  - {name: 🇺🇲 美国节点, type: load-balance, <<: *default_proxy_groups_rule, strategy: consistent-hashing, use: [America]}
  - {name: 🇨🇳 台湾节点, type: load-balance, <<: *default_proxy_groups_rule, strategy: consistent-hashing, use: [Taiwan]}
  - {name: 🇸🇬 狮城节点, type: load-balance, <<: *default_proxy_groups_rule, strategy: consistent-hashing, use: [Singapore]}
  - {name: 🇬🇧 英国节点, type: load-balance, <<: *default_proxy_groups_rule, strategy: consistent-hashing, use: [Britain]}
  - {name: 🇲🇾 马来西亚节点, type: load-balance, <<: *default_proxy_groups_rule, strategy: consistent-hashing, use: [Malaysia]}
  - {name: 🌐 其他节点, type: url-test, <<: *default_proxy_groups_rule, tolerance: 50, use: [Others]}
  - {name: ✈️ 备用机场, type: fallback, <<: *default_proxy_groups_rule, use: [second]}
  - {name: 🍎 苹果服务, type: select, <<: *default_proxy_groups_rule, proxies: [🚀 节点选择, DIRECT, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇬🇧 英国节点, 🇲🇾 马来西亚节点, 🚀 手动切换]}
  - {name: 🎥 Netflix, type: select, <<: *default_proxy_groups_rule, proxies: [🚀 节点选择, ♻️ 自动选择, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇬🇧 英国节点, 🇲🇾 马来西亚节点, 🚀 手动切换, DIRECT]}
  - {name: 📺 巴哈姆特, type: select, <<: *default_proxy_groups_rule, proxies: [ 🇨🇳 台湾节点, 🚀 节点选择, 🚀 手动切换, DIRECT]}
  - {name: 📺 哔哩哔哩, type: select, <<: *default_proxy_groups_rule, proxies: [🎯 全球直连, 🇨🇳 台湾节点, 🇭🇰 香港节点]}
  - {name: 🌏 国内媒体, type: select, <<: *default_proxy_groups_rule, proxies: [DIRECT, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇬🇧 英国节点, 🇲🇾 马来西亚节点, 🚀 手动切换]}
  - {name: 📢 谷歌FCM, type: select, <<: *default_proxy_groups_rule, proxies: [DIRECT, 🚀 节点选择, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇬🇧 英国节点, 🇲🇾 马来西亚节点, 🚀 手动切换]}
  - {name: 🛑 广告拦截, type: select, proxies: [REJECT, DIRECT]}
  - {name: 🍃 应用净化, type: select, proxies: [REJECT, DIRECT]}
  - {name: 🎯 全球直连, type: select, proxies: [DIRECT, 🚀 节点选择, ♻️ 自动选择]}
  - {name: 🐟 漏网之鱼, type: select, proxies: [🚀 节点选择, ♻️ 自动选择, DIRECT, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇬🇧 英国节点, 🇲🇾 马来西亚节点, 🌐 其他节点, 🚀 手动切换]}
  # - {name: 🎶 网易音乐, type: select, proxies: [DIRECT], use: [Neteasemusic]}

RuleDefault: &RuleDefault
  {type: http, behavior: classical, format: text, interval: 86400}
rule-providers:
  AWAvenue-Ads-Rule-Clash:
    type: http
    behavior: domain
    format: yaml
    path: ./rule/AWAvenue-Ads-Rule-Clash.yaml
    url: "https://raw.githubusercontent.com/TG-Twilight/AWAvenue-Ads-Rule/main//Filters/AWAvenue-Ads-Rule-Clash.yaml"
    interval: 86400
  LocalAreaNetwork:
    <<: *RuleDefault
    path: ./rule/LocalAreaNetwork.list
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/LocalAreaNetwork.list"
  UnBan:
    <<: *RuleDefault
    path: ./rule/UnBan.list
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/UnBan.list"
  BanAD:
    <<: *RuleDefault
    path: ./rule/BanAD.list
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanAD.list"
  BanProgramAD:
    <<: *RuleDefault
    path: ./rule/BanProgramAD.list
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanProgramAD.list"
  GoogleFCM:
    <<: *RuleDefault
    path: ./rule/GoogleFCM.list
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/GoogleFCM.list"
  WechatFCM:
    <<: *RuleDefault
    path: ./rule/WechatFCM.list
    url: "https://raw.githubusercontent.com/Snowflake-Pink/Files4Converter/master/Clash/WechatFCM.list"
  GoogleCN:
    <<: *RuleDefault
    path: ./rule/GoogleCN.list
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/GoogleCN.list"
  SteamCN:
    <<: *RuleDefault
    path: ./rule/SteamCN.list
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/SteamCN.list"
  Bing:
    <<: *RuleDefault
    path: ./rule/Bing.list
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Bing.list"
  OneDrive:
    <<: *RuleDefault
    path: ./rule/OneDrive.list
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/OneDrive.list"
  Microsoft:
    <<: *RuleDefault
    path: ./rule/Microsoft.list
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Microsoft.list"
  Apple:
    <<: *RuleDefault
    path: ./rule/Apple.list
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Apple.list"
  Telegram:
    <<: *RuleDefault
    path: ./rule/Telegram.list
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Telegram.list"
  Ai:
    <<: *RuleDefault
    path: ./rule/Ai.list
    url: "https://ruleset.skk.moe/Clash/non_ip/ai.txt"
  NetEaseMusic:
    <<: *RuleDefault
    path: ./rule/NetEaseMusic.list
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/NetEaseMusic.list"
  Epic:
    <<: *RuleDefault
    path: ./rule/Epic.list
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Epic.list"
  Origin:
    <<: *RuleDefault
    path: ./rule/Origin.list
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Origin.list"
  Sony:
    <<: *RuleDefault
    path: ./rule/Sony.list
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Sony.list"
  Steam:
    <<: *RuleDefault
    path: ./rule/Steam.list
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Steam.list"
  Nintendo:
    <<: *RuleDefault
    path: ./rule/Nintendo.list
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Nintendo.list"
  Youtube:
    <<: *RuleDefault
    path: ./rule/Youtube.list
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/YouTube.list"
  Netflix:
    <<: *RuleDefault
    path: ./rule/Netflix.list
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Netflix.list"
  Bahamut:
    <<: *RuleDefault
    path: ./rule/Bahamut.list
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Bahamut.list"
  BilibiliHMT:
    <<: *RuleDefault
    path: ./rule/BilibiliHMT.list
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/BilibiliHMT.list"
  Bilibili:
    <<: *RuleDefault
    path: ./rule/Bilibili.list
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Bilibili.list"
  ChinaMedia:
    <<: *RuleDefault
    path: ./rule/ChinaMedia.list
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaMedia.list"
  ProxyMedia:
    <<: *RuleDefault
    path: ./rule/ProxyMedia.list
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ProxyMedia.list"
  ProxyGFWlist:
    <<: *RuleDefault
    path: ./rule/ProxyGFWlist.list
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ProxyGFWlist.list"
  ChinaDomain:
    <<: *RuleDefault
    path: ./rule/ChinaDomain.list
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaDomain.list"
  ChinaCompanyIp:
    <<: *RuleDefault
    path: ./rule/ChinaCompanyIp.list
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaCompanyIp.list"
  Download:
    <<: *RuleDefault
    path: ./rule/Download.list
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Download.list"

rules:
  - AND,((PROCESS-NAME,mihomo),(NOT,((IN-TYPE,inner)))),REJECT
  - AND,((PROCESS-NAME,clash),(NOT,((IN-TYPE,inner)))),REJECT

# 死保
  - RULE-SET,LocalAreaNetwork,🎯 全球直连
  - RULE-SET,UnBan,🎯 全球直连
  - DOMAIN-SUFFIX,www.op.gg,🎯 全球直连
  - DOMAIN-SUFFIX,steamserver.net,🎯 全球直连

  - RULE-SET,AWAvenue-Ads-Rule-Clash,🛑 广告拦截
  - RULE-SET,BanAD,🛑 广告拦截
  - RULE-SET,BanProgramAD,🍃 应用净化
  - GEOSITE,category-ads-all,🛑 广告拦截

  - RULE-SET,GoogleFCM,📢 谷歌FCM
  - RULE-SET,WechatFCM,📢 谷歌FCM
  - RULE-SET,GoogleCN,🎯 全球直连
  - RULE-SET,SteamCN,🎯 全球直连
  - RULE-SET,Bing,Ⓜ️ 微软Bing
  - RULE-SET,OneDrive,Ⓜ️ 微软云盘
  - RULE-SET,Microsoft,Ⓜ️ 微软服务
  - RULE-SET,Apple,🍎 苹果服务
  - RULE-SET,Telegram,📲 Telegram
  - RULE-SET,Ai,💬 AI
  - RULE-SET,Epic,🎮 游戏平台
  - RULE-SET,Origin,🎮 游戏平台
  - RULE-SET,Sony,🎮 游戏平台
  - DOMAIN,store.akamai.steamstatic.com,🎮 游戏平台
  - DOMAIN,cdn.akamai.steamstatic.com,🎮 游戏平台
  - RULE-SET,Steam,🎮 游戏平台
  - RULE-SET,Nintendo,🎮 游戏平台
  - RULE-SET,BilibiliHMT,📺 哔哩哔哩
  - RULE-SET,Bilibili,📺 哔哩哔哩
  # - PROCESS-NAME,com.zhiliaoapp.musically,🌍 国外媒体
  # - PROCESS-NAME,com.netease.cloudmusic,🎶 网易音乐
  # - RULE-SET,NetEaseMusic,🎶 网易音乐
  - RULE-SET,ChinaMedia,🌏 国内媒体
  - AND,((DST-PORT,443),(NETWORK,UDP)),🛑 广告拦截
  - RULE-SET,Youtube,📹 YouTube
  - RULE-SET,Netflix,🎥 Netflix
  - RULE-SET,Bahamut,📺 巴哈姆特
  - RULE-SET,ProxyMedia,🌍 国外媒体
  - RULE-SET,ProxyGFWlist,🚀 节点选择
  - RULE-SET,Download,📥 下载

  - RULE-SET,ChinaDomain,🎯 全球直连
  - RULE-SET,ChinaCompanyIp,🎯 全球直连
  - GEOSITE,CN,🎯 全球直连
  - GEOIP,private,🎯 全球直连,no-resolve
  - GEOIP,CN,🎯 全球直连,no-resolve
  - MATCH,🐟 漏网之鱼